{"ast":null,"code":"var _jsxFileName = \"/Users/barath/Documents/React/ChatRoom/ChatRoom_App/react_frontend/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport './Chatroom.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom() {\n  _s();\n  const query = new URLSearchParams(window.location.search);\n  const chatroom_code = query.get('code');\n  const [messages, setMessages] = useState([]);\n  function GetMessages() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + localStorage.getItem('token')\n      }\n    };\n    fetch(`http://127.0.0.1:8000/api/message/?chatroom_code=${chatroom_code}`, requestOptions).then(response => response.json()).then(response => {\n      setMessages(response);\n    });\n  }\n  useEffect(() => {\n    GetMessages();\n  });\n  const rendermessage = () => {\n    let messagelist = [];\n    messages.forEach(message => {\n      messagelist.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [message.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 51\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this));\n    });\n    return messagelist;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: chatroom_code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chatbox\",\n      children: rendermessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatroom, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Chatroom","_s","query","URLSearchParams","window","location","search","chatroom_code","get","messages","setMessages","GetMessages","requestOptions","method","headers","localStorage","getItem","fetch","then","response","json","rendermessage","messagelist","forEach","message","push","class","children","sender","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barath/Documents/React/ChatRoom/ChatRoom_App/react_frontend/src/components/Chatroom.js"],"sourcesContent":["import './Chatroom.css';\nimport { useEffect, useState } from \"react\";\n\nfunction Chatroom() {\n    const query = new URLSearchParams(window.location.search);\n    const chatroom_code = query.get('code')\n\n    const [messages, setMessages] = useState([]);\n\n    function GetMessages() {\n        const requestOptions = {\n            method: 'GET',\n            headers: { \n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + localStorage.getItem('token')\n            },\n        };\n        fetch(`http://127.0.0.1:8000/api/message/?chatroom_code=${chatroom_code}`, requestOptions)\n            .then(response => response.json())\n            .then((response) => {\n                setMessages(response);\n            });\n    }\n\n    useEffect(() => {GetMessages()});\n\n    const rendermessage = () => {\n        let messagelist = [];\n        messages.forEach(message => {\n            messagelist.push(<div class='message'><h3>{message.sender}:</h3> <p>{message.message}</p></div>)\n        });\n        return messagelist;\n    }\n\n    return (\n        <div class='body'>\n            <h2>{chatroom_code}</h2>\n            <div class='chatbox'>\n                {rendermessage()}\n            </div>\n        </div>\n    )\n}\n\nexport default Chatroom;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EACzD,MAAMC,aAAa,GAAGL,KAAK,CAACM,GAAG,CAAC,MAAM,CAAC;EAEvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASc,WAAWA,CAAA,EAAG;IACnB,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC5D;IACJ,CAAC;IACDC,KAAK,CAAE,oDAAmDV,aAAc,EAAC,EAAEK,cAAc,CAAC,CACrFM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEC,QAAQ,IAAK;MAChBT,WAAW,CAACS,QAAQ,CAAC;IACzB,CAAC,CAAC;EACV;EAEAvB,SAAS,CAAC,MAAM;IAACe,WAAW,EAAE;EAAA,CAAC,CAAC;EAEhC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIC,WAAW,GAAG,EAAE;IACpBb,QAAQ,CAACc,OAAO,CAACC,OAAO,IAAI;MACxBF,WAAW,CAACG,IAAI,eAAC1B,OAAA;QAAK2B,KAAK,EAAC,SAAS;QAAAC,QAAA,gBAAC5B,OAAA;UAAA4B,QAAA,GAAKH,OAAO,CAACI,MAAM,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,KAAC,eAAAjC,OAAA;UAAA4B,QAAA,EAAIH,OAAO,CAACA;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,CAAC;IACpG,CAAC,CAAC;IACF,OAAOV,WAAW;EACtB,CAAC;EAED,oBACIvB,OAAA;IAAK2B,KAAK,EAAC,MAAM;IAAAC,QAAA,gBACb5B,OAAA;MAAA4B,QAAA,EAAKpB;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxBjC,OAAA;MAAK2B,KAAK,EAAC,SAAS;MAAAC,QAAA,EACfN,aAAa;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAAC/B,EAAA,CAvCQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}